$ref = has an error with ''refs''
additionalItems = index ''{0}'' is not defined in the schema and the schema does not allow additional items
additionalProperties = property ''{0}'' is not defined in the schema and the schema does not allow additional properties
allOf = must be valid to all the schemas {0}
anyOf = must be valid to any of the schemas {0}
const = must be the constant value ''{0}''
contains = does not contain an element that passes these validations: {1}
contains.max = must contain at most {0} element(s) that passes these validations: {1}
contains.min = must contain at least {0} element(s) that passes these validations: {1}
dependencies = has an error with dependencies {0}
dependentRequired = has a missing property ''{0}'' which is dependent required because ''{1}'' is present
dependentSchemas = has an error with dependentSchemas {0}
enum = does not have a value in the enumeration {0}
exclusiveMaximum = must have an exclusive maximum value of {0}
exclusiveMinimum = must have an exclusive minimum value of {0}
false = schema for ''{0}'' is false
format = does not match the {0} pattern
format.date = does not match the {0} pattern must be a valid RFC 3339 full-date
format.date-time = does not match the {0} pattern must be a valid RFC 3339 date-time
format.duration = does not match the {0} pattern must be a valid ISO 8601 duration
format.email = does not match the {0} pattern must be a valid RFC 5321 Mailbox
format.ipv4 = does not match the {0} pattern must be a valid RFC 2673 IP address
format.ipv6 = does not match the {0} pattern must be a valid RFC 4291 IP address
format.idn-email = does not match the {0} pattern must be a valid RFC 6531 Mailbox
format.idn-hostname = does not match the {0} pattern must be a valid RFC 5890 internationalized hostname
format.iri = does not match the {0} pattern must be a valid RFC 3987 IRI
format.iri-reference = does not match the {0} pattern must be a valid RFC 3987 IRI-reference
format.uri = does not match the {0} pattern must be a valid RFC 3986 URI
format.uri-reference = does not match the {0} pattern must be a valid RFC 3986 URI-reference
format.uri-template = does not match the {0} pattern must be a valid RFC 6570 URI Template
format.uuid = does not match the {0} pattern must be a valid RFC 4122 UUID
format.regex = does not match the {0} pattern must be a valid ECMA-262 regular expression
format.time = does not match the {0} pattern must be a valid RFC 3339 time
format.hostname = does not match the {0} pattern must be a valid RFC 1123 host name
format.json-pointer = does not match the {0} pattern must be a valid RFC 6901 JSON Pointer
format.relative-json-pointer = does not match the {0} pattern must be a valid IETF Relative JSON Pointer
format.unknown = has an unknown format ''{0}''
id = ''{0}'' is not a valid {1}
items = index ''{0}'' is not defined in the schema and the schema does not allow additional items
maxContains = must be a non-negative integer in {0}
maxItems = must have at most {0} items but found {1}
maxLength = must be at most {0} characters long
maxProperties = must have at most {0} properties
maximum = must have a maximum value of {0}
minContains = must be a non-negative integer in {0}
minContainsVsMaxContains = minContains must less than or equal to maxContains in {0}
minItems = must have at least {0} items but found {1}
minLength = must be at least {0} characters long
minProperties = must have at least {0} properties
minimum = must have a minimum value of {0}
multipleOf = must be multiple of {0}
not = must not be valid to the schema {0}
notAllowed = property ''{0}'' is not allowed but it is in the data
oneOf = must be valid to one and only one schema, but {0} are valid
oneOf.indexes = must be valid to one and only one schema, but {0} are valid with indexes ''{1}''
pattern = does not match the regex pattern {0}
patternProperties = has some error with ''pattern properties''
prefixItems = no validator found at this index
properties = has an error with ''properties''
propertyNames = property ''{0}'' name is not valid: {1}
readOnly = is a readonly field, it cannot be changed
required = required property ''{0}'' not found
type = {0} found, {1} expected
unevaluatedItems = index ''{0}'' is not evaluated and the schema does not allow unevaluated items
unevaluatedProperties = property ''{0}'' is not evaluated and the schema does not allow unevaluated properties
unionType = {0} found, {1} expected
uniqueItems = must have only unique items in the array
writeOnly = is a write-only field, it cannot appear in the data
contentEncoding = does not match content encoding {0}
contentMediaType = is not a content media type
discriminator.missing_discriminating_value = required property ''{0}'' for discriminator not found
discriminator.anyOf.no_match_found = no matching schema found for discriminator value ''{0}''
discriminator.oneOf.no_match_found = no matching schema found for discriminator value ''{0}''