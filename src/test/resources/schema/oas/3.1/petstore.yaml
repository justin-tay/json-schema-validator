openapi: 3.1.0
info:
  title: Petstore - OpenAPI 3.1
paths:
  /pet/{petId}:
    get:
      tags:
      - pets
      summary: Find pet by ID
      description: Returns a pet when 0 < ID <= 10.  ID > 10 or nonintegers will simulate
        API error conditions
      operationId: getPetById
      parameters:
      - name: petId
        in: path
        description: ID of pet that needs to be fetched
        required: true
        schema:
          type: integer
          format: int64
          description: param ID of pet that needs to be fetched
          exclusiveMaximum: 10
          exclusiveMinimum: 1
      responses:
        default:
          description: The pet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
                description: A Pet in JSON format
            application/xml:
              schema:
                $ref: '#/components/schemas/PetResponse'
                description: A Pet in XML format
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      - api_key: []
components:
  schemas:
    PetRequest:
      $schema: https://spec.openapis.org/oas/3.1/dialect/base
      oneOf:
        - $ref: '#/components/schemas/Cat'
        - $ref: '#/components/schemas/Dog'
        - $ref: '#/components/schemas/Lizard'
    PetResponse:
      $schema: https://spec.openapis.org/oas/3.1/dialect/base
      oneOf:
        - $ref: '#/components/schemas/Cat'
        - $ref: '#/components/schemas/Dog'
        - $ref: '#/components/schemas/Lizard'
    Pet:
      $schema: https://spec.openapis.org/oas/3.1/dialect/base
      type: object
      required:
      - petType
      properties:
        petType:
          type: string
      discriminator:
        propertyName: petType
        mapping:
          cat: '#/components/schemas/Cat'
          dog: '#/components/schemas/Dog'
          lizard: '#/components/schemas/Lizard'
    Cat:
      $schema: https://spec.openapis.org/oas/3.1/dialect/base
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        # all other properties specific to a `Cat`
        required:
        - name
        properties:
          name:
            type: string
    Dog:
      $schema: https://spec.openapis.org/oas/3.1/dialect/base
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        # all other properties specific to a `Dog`
        required:
        - bark
        properties:
          bark:
            type: string
    Lizard:
      $schema: https://spec.openapis.org/oas/3.1/dialect/base
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        # all other properties specific to a `Lizard`
        required:
        - lovesRocks
        properties:
          lovesRocks:
            type: boolean